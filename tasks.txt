#3.0. False 
Разреженная матрица хранится в форме 3-х объектов:
    - Вектор А содержит значения ненулевых элементов;
    - Вектор JA содержит номера столбцов для элементов вектора А;
    - Связный список IA, в элементе Nk которого находится номер компонент в А и JA,
с которых начинается описание строки Nk матрицы А.

Смоделировать операцию сложения двух матриц хранящихся в этой форме, с получением результата в той же форме.

#4.0. False
Реализовать используя массив и список, операции добавления и удаления 
элементов стека с проверкой переполнения и опустошения стека и операцию отображения текущего состояния стека.

Оценить временную и емкостную эффективность использования указанных типов данных для реализации стека.

#5.0. False
Написать программу обработки в обслуживающем аппарате (ОА) 500 [200 в другом билете] заявок, поступающих в хвост
очереди по случайному закону с интервалом времени, равномерно распределённым от 0 до 2 единиц
времени (е.в.). В ОА они поступают из головы очереди по одной и обслуживаются также равновероятно за время от 0 до 4 е.в.
(времена вещественного типа). В начале процесса в системе заявок нет. Выдать в конце процесса информацию о текущей длине 
очереди, количество вошедших и вышедших заявок, общее время моделирования. Обосновать выбор структуры данных (СД) 
для представления очереди.

#5.1. False
Создать программу работы с двусвязным списком, реализующую операции добавления, удаления элементов из списка
и отображения текущего состояния списка. Все стандартные операции со списком должны быть оформлены 
подпрограммами. Оценить, для каких задач эффективно использовать двусвязный список.

#5.2. False
Создать программу работы со списком, реализующую операции добавления, удаления элементов из списка
и отображения текущего состояния списка. Все стандартные операции со списком должны быть оформлены 
подпрограммами. Создать, используя операции, сортированный по возрастанию список целых чисел.
Оценить, для каких задач эффективно использовать сортированный список.

#5.3. False
Реализовать используя массив и список, операции добавления и удаления элементов линейной очереди с проверкой переполнения
и опустошения очереди и операцию отображения текущего состояния очереди. Оценить временную и емкостную эффективность
использования указанных типов данных для реализации очереди.

#6.0. False
Построить хеш-таблицу, содержащую различные слова из введенной строки. Для устранения коллизий выбрать метод закрытого
хеширования. Вывести таблицу на экран. Осуществить поиск введенного слова в хеш-таблице. Определить максимальное количество
сравнений при поиске данных в таблице.

#6.1. False
Построить хеш-таблицу целых чисел, хранящихся в файле. Обосновать выбор хеш-функции. Осуществить поиск введенного
целого числа в хеш-таблице. Указать количество сравнений при поиске числа в хеш-таблице.

#6.2. False
Построить идеально сбалансированное двоичное дерево и двоичное дерево поиска из произвольно вводимых слов. Определить
высоту каждого из деревьев. Оценить эффективность использования указанных деревьев для поиска слов.

#7.0. False
В графе найти минимальное расстояние от указанной вершины до всех его вершин. Обосновать представление графа. Вывести граф
и найденные расстояния.

#7.1. False
В графе найти минимальное расстояние между всеми парами его вершин. Обосновать представление графа. 
Вывести граф и найденные расстояния.
 
